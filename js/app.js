document.addEventListener('include:loaded', (e) => {
  // Á¢∫Ë™çÊòØ tabbar Ë¢´ËºâÂÖ•ÂÆåÁï¢ÂÜçÂü∑Ë°å
  if (e.detail.src.includes('tabbar.html')) {
    initApp(); // ‰∏ªÂàùÂßãÂåñÈÇèËºØÊê¨ÈÄ≤‰∏ÄÂÄãÂáΩÂºè
  }
});

function initApp() {

// Âü∫Êú¨Â∑•ÂÖ∑
const $  = (s, r=document) => r.querySelector(s);
const $$ = (s, r=document) => Array.from(r.querySelectorAll(s));

// ===== ‰∏ªÈ†ÅÂàÜÈ†ÅÔºàTabbarÔºâ =====
(() => {
  const PAGES = ["home","explore","map","saved","add"];
  const pages = new Map(PAGES.map(id => [id, document.querySelector(`[data-page="${id}"]`)]));
  const tabs  = $$('.tabbar .tab');

  let active = PAGES[0];
  const scrollMemo = new Map();

  function setAriaSelected(targetId){
    tabs.forEach(t => {
      const on = t.dataset.target === targetId;
      t.setAttribute('aria-selected', on ? 'true' : 'false');
      if(on) t.setAttribute('aria-current','page'); else t.removeAttribute('aria-current');
    });
  }

  function swapPages(oldId, newId){
    if (oldId){
      const prev = pages.get(oldId);
      if(prev){ prev.classList.remove('active','page--in'); prev.hidden = true; }
    }
    const next = pages.get(newId);
    if(next){ next.hidden = false; next.classList.add('active'); }
  }

  function afterSwap(newId, {push=true} = {}){
    const y = scrollMemo.get(newId) || 0;
    window.scrollTo(0, y);

    // ÂÖàÂêåÊ≠• tab ÁãÄÊÖãÔºàÈÅøÂÖç‰Ω†ÁúãÂà∞ÁöÑ„ÄåÂÖàÂàáÁï´Èù¢ÂæåÈ´ò‰∫ÆÊâçÂãï„ÄçÔºâ
    setAriaSelected(newId);

    // ÂèØÂèäÊôÇÊääÁÑ¶ÈªûÁßªÂà∞Ë©≤È†Å h1Ôºà‰∏çÊªæÂãïÔºâ
    const h1 = pages.get(newId)?.querySelector('[data-focusable-heading]');
    if(h1){ h1.focus({preventScroll:true}); }

    if (push) location.hash = newId;
    active = newId;
  }

  function showPage(id, {push=true} = {}){
    if (!pages.has(id) || active === id) return;
    const oldId = active, newId = id;

    // Ë®òÈåÑËàäÈ†Å scroll
    if (oldId){ scrollMemo.set(oldId, window.scrollY || 0); }

    // ÊñπÂêëÔºàÂèØËÆì CSS Ê±∫ÂÆö forward/reverse ÂãïÁï´Ôºâ
    if (oldId){
      const oldIdx = PAGES.indexOf(oldId);
      const newIdx = PAGES.indexOf(newId);
      document.documentElement.dataset.dir = newIdx > oldIdx ? 'forward' : 'reverse';
    } else {
      document.documentElement.dataset.dir = 'forward';
    }

    // ‰ΩøÁî® View TransitionsÔºàÊúâÂ∞±Áî®Ôºâ
    if (document.startViewTransition && matchMedia('(prefers-reduced-motion: no-preference)').matches){
      const vt = document.startViewTransition(() => swapPages(oldId, newId));
      vt.finished.finally(() => afterSwap(newId, {push}));
    } else {
      // fallbackÔºöÊ∑°ÂÖ•
      swapPages(oldId, newId);
      const next = pages.get(newId);
      if (next){ next.classList.add('page--in'); setTimeout(()=> next.classList.remove('page--in'), 240); }
      afterSwap(newId, {push});
    }
  }

  // Tab click
  tabs.forEach(btn=>{
    btn.addEventListener('click', ()=>{
      const id = btn.dataset.target;
      showPage(id);
    });
  });

  // hash deep-linkÔºàÂèØÁõ¥Êé• #map ÈÄ≤‰æÜÔºâ
  const initHash = () => {
    const h = (location.hash||'').replace('#','');
    if (PAGES.includes(h)) showPage(h, {push:false});
    else showPage(active, {push:false});
  };
  window.addEventListener('hashchange', initHash);
  initHash();
})();

// ===== Settings ‰∫åÁ¥ö/‰∏âÁ¥öÔºàOverlay-styleÔºâ =====
(() => {
  const settingsPage = $('#p-settings');
  const btnOpen = $('#btnOpenSettings');
  const btnBack = $('#btnSettingsBack');

  // Á¨¨‰∏âÁ¥öÈõÜÂêà
  const tertiaryPages = new Map(
    ['settings-language','settings-currency','settings-privacy','settings-policy']
      .map(id => [id, document.getElementById(id)])
  );

  // ÁãÄÊÖã
  let lastMainPage = 'home'; // Èñã settings ÂâçÁöÑ‰∏ªÈ†ÅÔºàÂñÆÁ¥îÁ¥ÄÈåÑÔºå‰∏çÂàáÊèõÔºâ
  let stacking = [];         // Áñä‰ª£Ôºö['settings', 'settings-language', ...]

  // ÈñãÂïü‰∫åÁ¥ö
  function openSettings(){
    if (!settingsPage) return;
    // Á¥ÄÈåÑÁõÆÂâç‰∏ªÈ†Å idÔºàÁî® hash Êàñ aria-current ÊâæÔºâ
    const curr = document.querySelector('.tabbar .tab[aria-current="page"]')?.dataset.target || 'home';
    lastMainPage = curr;

    settingsPage.hidden = false;
    settingsPage.classList.add('active');
    stacking = ['settings'];

    // ËÅöÁÑ¶Ê®ôÈ°å
    $('#h-settings')?.focus({preventScroll:true});
  }

  // ÈóúÈñâ‰∫åÁ¥öÔºàÂõûÂà∞„ÄåÈñãÂïüÊôÇ„ÄçÁöÑ‰∏ªÈ†ÅÔºå‰∏çÂãï hashÔºâ
  function closeSettings(){
    settingsPage?.classList.remove('active');
    settingsPage?.setAttribute('hidden','');
    // ÈóúÈñâÊâÄÊúâ‰∏âÁ¥ö
    tertiaryPages.forEach(p => { p.hidden = true; p.classList.remove('active'); });
    stacking = [];
  }

  // Ëá™‰∫åÁ¥öÊâìÈñã‰∏âÁ¥ö
  function openTertiary(id){
    const page = tertiaryPages.get(id);
    if (!page) return;
    page.hidden = false;
    // Âè≥ÈÄ≤Âè≥Âá∫
    if (document.startViewTransition && matchMedia('(prefers-reduced-motion: no-preference)').matches){
      document.startViewTransition(() => page.classList.add('active'));
    } else {
      page.classList.add('active');
    }
    stacking.push(id);
    page.querySelector('.settings-title')?.focus({preventScroll:true});
  }

  // Á¨¨‰∏âÁ¥öËøîÂõûÔºöÂè™ÂõûÂà∞‰∫åÁ¥ö
  function closeTopTertiary(){
    const top = stacking[stacking.length - 1];
    if (top && top !== 'settings'){
      const page = tertiaryPages.get(top);
      if (page){
        page.classList.remove('active');
        page.setAttribute('hidden','');
        stacking.pop();
        $('#h-settings')?.focus({preventScroll:true});
      }
      return;
    }
    // Â¶ÇÊûúÂ∑≤ÂõûÂà∞‰∫åÁ¥öÔºåÂÜçÂü∑Ë°å‰∏ÄÊ¨°Â∞±ÊòØÈóúÈñâÊï¥ÂÄã Settings
    closeSettings();
  }

  // Á∂ÅÂÆö
  btnOpen?.addEventListener('click', openSettings);
  btnBack?.addEventListener('click', closeSettings);

  // ‰∫åÁ¥ö ‚Üí Á¨¨‰∏âÁ¥ö
  $$('.settings-list .set-item[data-target]').forEach(btn=>{
    btn.addEventListener('click', ()=>{
      const id = btn.dataset.target;
      openTertiary(id);
    });
  });

  // Á¨¨‰∏âÁ¥öËøîÂõû
  $$('.overlay-page.tertiary .sub-back').forEach(btn=>{
    btn.addEventListener('click', closeTopTertiary);
  });

  // Esc ÈóúÈñâÈ†ÇÂ±§ÔºàÂÖàÊî∂Á¨¨‰∏âÁ¥öÔºåÂÜçÊî∂‰∫åÁ¥öÔºâ
  window.addEventListener('keydown', (e)=>{
    if (e.key === 'Escape'){
      if (stacking.length > 1) closeTopTertiary();
      else if (stacking.length === 1) closeSettings();
    }
  });
})();

// ===== Â∞èÈñãÈóúÔºàÁ§∫ÊÑèÔºâ =====
(() => {
  const dark = $('#toggleDark');
  dark?.addEventListener('change', (e)=>{
    document.documentElement.classList.toggle('dark', e.target.checked);
  });

  const a11y = $('#toggleA11y');
  a11y?.addEventListener('change', (e)=>{
    document.documentElement.dataset.a11y = e.target.checked ? 'on' : 'off';
  });
})();
}


// ===== Explore UI: render 4x3 city wall & basic interactions =====
(() => {
  const wall = document.getElementById('cityWall');
  const head = document.getElementById('resultHead');
  const sk   = document.getElementById('skList');
  const list = document.getElementById('merchantList');
  if(!wall || !head) return;

  // Demo 12 ÂüéÂ∏ÇÔºàicon ÂÖàÁî® emojiÔºõ‰πãÂæåÂèØÊèõ SVGÔºâ
  const CITIES = [
    {id:'kuching', name:'Kuching', icon:'üèõÔ∏è', count:128},
    {id:'miri',    name:'Miri',    icon:'‚õΩ',  count:64},
    {id:'sibu',    name:'Sibu',    icon:'üõ∂',  count:52},
    {id:'bintulu', name:'Bintulu', icon:'‚öì',  count:40},
    {id:'sarikei', name:'Sarikei', icon:'üçç',  count:24},
    {id:'limbang', name:'Limbang', icon:'üåâ',  count:16},
    {id:'lawas',   name:'Lawas',   icon:'üåø',  count:14},
    {id:'mukah',   name:'Mukah',   icon:'üêü',  count:18},
    {id:'kapit',   name:'Kapit',   icon:'‚õ∞Ô∏è',  count:12},
    {id:'betong',  name:'Betong',  icon:'üèûÔ∏è', count:11},
    {id:'samarahan',name:'Samarahan',icon:'üéì',count:20},
    {id:'serian',  name:'Serian',  icon:'üå≤',  count:9}
  ];

  // Render 4x3
  wall.innerHTML = '';
  CITIES.slice(0,12).forEach((c, i) => {
    const btn = document.createElement('button');
    btn.className = 'citycell';
    btn.setAttribute('role','tab');
    btn.dataset.id = c.id;
    if(i===0) btn.setAttribute('aria-selected','true');
    else      btn.setAttribute('aria-selected','false');
    btn.innerHTML = `
      <span class="ico">${c.icon}</span>
      <span class="name">${c.name}</span>
      <span class="count">${c.count}</span>
    `;
    wall.appendChild(btn);
  });

  function selectCity(id){
    // Ê®£Âºè
    wall.querySelectorAll('.citycell').forEach(b=>{
      const on = b.dataset.id === id;
      b.setAttribute('aria-selected', on ? 'true' : 'false');
    });
    // Ê®ôÈ°åËàáÈ™®Êû∂
    const city = CITIES.find(x=>x.id===id);
    head.textContent = `${city?.name || 'City'} ‚Äî ${city?.count || 0} places`;
    sk.hidden = false;
    list.hidden = true;

    // ÂÖà‰∏çÂÅöË≥áÊñôÔºõÁî® timeout Ê®°Êì¨ËºâÂÖ•Âæå‰ªçÈ°ØÁ§∫È™®Êû∂Ôºà‰Ω†‰πãÂæåÊõøÊèõÔºâ
    // setTimeout(() => { sk.hidden = true; list.hidden = false; /* render merchants(...) */ }, 800);
  }

  // ÈªûÊìä
  wall.addEventListener('click', (e)=>{
    const btn = e.target.closest('.citycell');
    if(!btn) return;
    selectCity(btn.dataset.id);
  });

  // ÈçµÁõ§Â∑¶Âè≥ÂàáÊèõ
  wall.addEventListener('keydown', (e)=>{
    const cells = Array.from(wall.querySelectorAll('.citycell'));
    const cur = cells.findIndex(b => b.getAttribute('aria-selected') === 'true');
    if(e.key === 'ArrowRight'){ e.preventDefault(); const n = cells[Math.min(cur+1, cells.length-1)]; n?.focus(); n?.click(); }
    if(e.key === 'ArrowLeft'){  e.preventDefault(); const p = cells[Math.max(cur-1, 0)];             p?.focus(); p?.click(); }
  });

  // È†êË®≠ÈÅ∏ÂèñÁ¨¨‰∏ÄÂÄã
  const first = wall.querySelector('.citycell');
  if(first) selectCity(first.dataset.id);
})();